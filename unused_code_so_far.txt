 # study_name = request.form.get('protocol_name')
    # study_name.split('')
    # for char in study_name:
    #     if char == " ":
    #         char = '_'
    # study_name[0].upper()
    # study_name = ''.join(study_name)
    # print(study_name)
    # num_of_appts = int(request.form.get('number_of_appointments'))
    # num_of_documents = int(request.form.get('number_of_documents'))
    # num_of_labs = int(request.form.get('number_of_labs'))
    # num_of_tests = int(request.form.get('number_of_tests'))
    # num_of_biosamples = int(request.form.get('number_of_biosamples'))
    # num_of_additionals = int(request.form.get('number_of_additional'))

    # kwargs = {'table_name': study_name, 'mrn': 'mrn', 'appts': [], 'ppw': [], 'labs': [],
    #           'tests': [], 'biosamples': [], 'additionals': []}

    # while num_of_appts > 0:
    #     appointment = request.form.get(
    #         'appointment ' + str(num_of_appts - 1)).strip()
    #     kwargs['appts'].append(appointment)
    #     num_of_appts -= 1

    # while num_of_documents > 0:
    #     document = request.form.get(
    #         'document ' + str(num_of_documents - 1)).strip()
    #     kwargs['ppw'].append(document)
    #     num_of_documents -= 1

    # while num_of_labs > 0:
    #     lab = request.form.get('lab ' + str(num_of_labs - 1)).strip()
    #     kwargs['labs'].append(lab)
    #     num_of_labs -= 1

    # while num_of_tests > 0:
    #     test = request.form.get('test ' + str(num_of_tests - 1)).strip()
    #     kwargs['tests'].append(test)
    #     num_of_tests -= 1

    # while num_of_biosamples > 0:
    #     biosample = request.form.get(
    #         'biosample ' + str(num_of_biosamples - 1)).strip()
    #     kwargs['biosamples'].append(biosample)
    #     num_of_biosamples -= 1

    # while num_of_additionals > 0:
    #     additional = request.form.get(
    #         'additional ' + str(num_of_additionals - 1)).strip()
    #     kwargs['additionals'].append(additional)
    #     num_of_additionals -= 1

    # create_table = crud.create_table(study_name)

    # add_columns = crud.add_columns_to_table(kwargs, **kwargs)


        return render_template('main_page.html', column_headers=column_headers)
