"""Add Role model and staff_roles association table

Revision ID: cabec2781f81
Revises: 0c729069aaba
Create Date: 2025-06-12 01:05:00.230342

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cabec2781f81'
down_revision: Union[str, None] = '0c729069aaba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('can_prescribe', sa.Boolean(), nullable=True),
    sa.Column('can_order_tests', sa.Boolean(), nullable=True),
    sa.Column('can_manage_users', sa.Boolean(), nullable=True),
    sa.Column('can_view_billing', sa.Boolean(), nullable=True),
    sa.Column('can_view_research_data', sa.Boolean(), nullable=True),
    sa.Column('can_schedule_appointments', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('staff_roles',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('staff_id', 'role_id')
    )
    op.drop_table('role')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('role_pkey')),
    sa.UniqueConstraint('name', name=op.f('role_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('staff_roles')
    op.drop_table('roles')
    # ### end Alembic commands ###
